name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build-win64:
    if: "!contains(github.event.head_commit.message, '[skip ci]') || github.event_name == 'release'"
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Configure CMake
      run: |
        git submodule update
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
 
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build-macos:
    if: "!contains(github.event.head_commit.message, '[skip ci]') || github.event_name == 'release'"
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Configure CMake
      run: |
        git submodule update
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
 
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

 # build-ubuntu:
#    if: "!contains(github.event.head_commit.message, '[skip ci]') || github.event_name == 'release'"
 #   runs-on: ubuntu-18.04
 #   strategy:
 #     fail-fast: false
 #     matrix:
 #       Configuration: [Release]
 #       Platform: [x64]
 #       CC: [clang-13]
 #       include:
 #         - CC: clang-13
 #           CXX: clang++-13
#
 #   steps:
 #   - uses: actions/checkout@v3
 #     with:
 #       submodules: recursive
 #   
 #   - name: Install Clang x64
 #     uses: egor-tensin/setup-clang@v1
 #     with:
 #       version: 13
 #       platform: x64
#
 #   - name: Configure CMake
 #     run: |
 #       git submodule update
 #       cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.Configuration}}
 #
 #   - name: Build
 #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
 #     env:
 #         CC: ${{ matrix.CC }}
 #         CXX: ${{ matrix.CXX }}